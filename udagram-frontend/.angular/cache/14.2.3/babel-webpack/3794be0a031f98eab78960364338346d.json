{"ast":null,"code":"import _regeneratorRuntime from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-1a99aeb7.js';\nimport { a as attachComponent } from './framework-delegate-ce4f806c.js';\nimport './helpers-4d272360.js';\nvar tabCss = \":host(.tab-hidden){display:none !important}\";\n\nvar Tab = /*#__PURE__*/function () {\n  function Tab(hostRef) {\n    _classCallCheck(this, Tab);\n\n    registerInstance(this, hostRef);\n    this.loaded = false;\n    /** @internal */\n\n    this.active = false;\n  }\n\n  _createClass(Tab, [{\n    key: \"componentWillLoad\",\n    value: function () {\n      var _componentWillLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.active) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.setActive();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillLoad() {\n        return _componentWillLoad.apply(this, arguments);\n      }\n\n      return componentWillLoad;\n    }()\n    /** Set the active component for the tab */\n\n  }, {\n    key: \"setActive\",\n    value: function () {\n      var _setActive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.prepareLazyLoaded();\n\n              case 2:\n                this.active = true;\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setActive() {\n        return _setActive.apply(this, arguments);\n      }\n\n      return setActive;\n    }()\n  }, {\n    key: \"changeActive\",\n    value: function changeActive(isActive) {\n      if (isActive) {\n        this.prepareLazyLoaded();\n      }\n    }\n  }, {\n    key: \"prepareLazyLoaded\",\n    value: function prepareLazyLoaded() {\n      if (!this.loaded && this.component != null) {\n        this.loaded = true;\n\n        try {\n          return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      return Promise.resolve(undefined);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tab = this.tab,\n          active = this.active,\n          component = this.component;\n      return h(Host, {\n        role: \"tabpanel\",\n        \"aria-hidden\": !active ? 'true' : null,\n        \"aria-labelledby\": \"tab-button-\".concat(tab),\n        class: {\n          'ion-page': component === undefined,\n          'tab-hidden': !active\n        }\n      }, h(\"slot\", null));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"active\": [\"changeActive\"]\n      };\n    }\n  }]);\n\n  return Tab;\n}();\n\nTab.style = tabCss;\nvar tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nvar Tabs = /*#__PURE__*/function () {\n  function Tabs(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Tabs);\n\n    registerInstance(this, hostRef);\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n    this.transitioning = false;\n    /** @internal */\n\n    this.useRouter = false;\n\n    this.onTabClicked = function (ev) {\n      var _ev$detail = ev.detail,\n          href = _ev$detail.href,\n          tab = _ev$detail.tab;\n\n      if (_this.useRouter && href !== undefined) {\n        var router = document.querySelector('ion-router');\n\n        if (router) {\n          router.push(href);\n        }\n      } else {\n        _this.select(tab);\n      }\n    };\n  }\n\n  _createClass(Tabs, [{\n    key: \"componentWillLoad\",\n    value: function () {\n      var _componentWillLoad2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var tabs;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.useRouter) {\n                  this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n                }\n\n                if (this.useRouter) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                tabs = this.tabs;\n\n                if (!(tabs.length > 0)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 6;\n                return this.select(tabs[0]);\n\n              case 6:\n                this.ionNavWillLoad.emit();\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentWillLoad() {\n        return _componentWillLoad2.apply(this, arguments);\n      }\n\n      return componentWillLoad;\n    }()\n  }, {\n    key: \"componentWillRender\",\n    value: function componentWillRender() {\n      var tabBar = this.el.querySelector('ion-tab-bar');\n\n      if (tabBar) {\n        var tab = this.selectedTab ? this.selectedTab.tab : undefined;\n        tabBar.selectedTab = tab;\n      }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n\n  }, {\n    key: \"select\",\n    value: function () {\n      var _select = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(tab) {\n        var selectedTab;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                selectedTab = _getTab(this.tabs, tab);\n\n                if (this.shouldSwitch(selectedTab)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", false);\n\n              case 3:\n                _context4.next = 5;\n                return this.setActive(selectedTab);\n\n              case 5:\n                _context4.next = 7;\n                return this.notifyRouter();\n\n              case 7:\n                this.tabSwitch();\n                return _context4.abrupt(\"return\", true);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function select(_x) {\n        return _select.apply(this, arguments);\n      }\n\n      return select;\n    }()\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n\n  }, {\n    key: \"getTab\",\n    value: function () {\n      var _getTab2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(tab) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", _getTab(this.tabs, tab));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getTab(_x2) {\n        return _getTab2.apply(this, arguments);\n      }\n\n      return getTab;\n    }()\n    /**\n     * Get the currently selected tab.\n     */\n\n  }, {\n    key: \"getSelected\",\n    value: function getSelected() {\n      return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n\n  }, {\n    key: \"setRouteId\",\n    value: function () {\n      var _setRouteId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id) {\n        var _this2 = this;\n\n        var selectedTab;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                selectedTab = _getTab(this.tabs, id);\n\n                if (this.shouldSwitch(selectedTab)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  changed: false,\n                  element: this.selectedTab\n                });\n\n              case 3:\n                _context6.next = 5;\n                return this.setActive(selectedTab);\n\n              case 5:\n                return _context6.abrupt(\"return\", {\n                  changed: true,\n                  element: this.selectedTab,\n                  markVisible: function markVisible() {\n                    return _this2.tabSwitch();\n                  }\n                });\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function setRouteId(_x3) {\n        return _setRouteId.apply(this, arguments);\n      }\n\n      return setRouteId;\n    }()\n    /** @internal */\n\n  }, {\n    key: \"getRouteId\",\n    value: function () {\n      var _getRouteId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _a, tabId;\n\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                tabId = (_a = this.selectedTab) === null || _a === void 0 ? void 0 : _a.tab;\n                return _context7.abrupt(\"return\", tabId !== undefined ? {\n                  id: tabId,\n                  element: this.selectedTab\n                } : undefined);\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getRouteId() {\n        return _getRouteId.apply(this, arguments);\n      }\n\n      return getRouteId;\n    }()\n  }, {\n    key: \"setActive\",\n    value: function setActive(selectedTab) {\n      if (this.transitioning) {\n        return Promise.reject('transitioning already happening');\n      }\n\n      this.transitioning = true;\n      this.leavingTab = this.selectedTab;\n      this.selectedTab = selectedTab;\n      this.ionTabsWillChange.emit({\n        tab: selectedTab.tab\n      });\n      selectedTab.active = true;\n      return Promise.resolve();\n    }\n  }, {\n    key: \"tabSwitch\",\n    value: function tabSwitch() {\n      var selectedTab = this.selectedTab;\n      var leavingTab = this.leavingTab;\n      this.leavingTab = undefined;\n      this.transitioning = false;\n\n      if (!selectedTab) {\n        return;\n      }\n\n      if (leavingTab !== selectedTab) {\n        if (leavingTab) {\n          leavingTab.active = false;\n        }\n\n        this.ionTabsDidChange.emit({\n          tab: selectedTab.tab\n        });\n      }\n    }\n  }, {\n    key: \"notifyRouter\",\n    value: function notifyRouter() {\n      if (this.useRouter) {\n        var router = document.querySelector('ion-router');\n\n        if (router) {\n          return router.navChanged('forward');\n        }\n      }\n\n      return Promise.resolve(false);\n    }\n  }, {\n    key: \"shouldSwitch\",\n    value: function shouldSwitch(selectedTab) {\n      var leavingTab = this.selectedTab;\n      return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n  }, {\n    key: \"tabs\",\n    get: function get() {\n      return Array.from(this.el.querySelectorAll('ion-tab'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h(Host, {\n        onIonTabButtonClick: this.onTabClicked\n      }, h(\"slot\", {\n        name: \"top\"\n      }), h(\"div\", {\n        class: \"tabs-inner\"\n      }, h(\"slot\", null)), h(\"slot\", {\n        name: \"bottom\"\n      }));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Tabs;\n}();\n\nvar _getTab = function _getTab(tabs, tab) {\n  var tabEl = typeof tab === 'string' ? tabs.find(function (t) {\n    return t.tab === tab;\n  }) : tab;\n\n  if (!tabEl) {\n    console.error(\"tab with id: \\\"\".concat(tabEl, \"\\\" does not exist\"));\n  }\n\n  return tabEl;\n};\n\nTabs.style = tabsCss;\nexport { Tab as ion_tab, Tabs as ion_tabs };","map":null,"metadata":{},"sourceType":"module"}