{"ast":null,"code":"import _regeneratorRuntime from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { MENU_BACK_BUTTON_PRIORITY } from './hardware-back-button-490df115.js';\nimport { c as componentOnReady } from './helpers-4d272360.js';\nimport { b as getIonMode } from './ionic-global-04e268e7.js';\nimport { c as createAnimation } from './animation-36c1d77d.js';\n/**\n * baseAnimation\n * Base class which is extended by the various types. Each\n * type will provide their own animations for open and close\n * and registers itself with Menu.\n */\n\nvar baseAnimation = function baseAnimation(isIos) {\n  // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\n  // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\n\n  /**\n   * \"Apply the sharp curve to items temporarily leaving the screen that may return\n   * from the same exit point. When they return, use the deceleration curve. On mobile,\n   * this transition typically occurs over 300ms\" -- MD Motion Guide\n   */\n  return createAnimation().duration(isIos ? 400 : 300);\n};\n/**\n * Menu Overlay Type\n * The menu slides over the content. The content\n * itself, which is under the menu, does not move.\n */\n\n\nvar menuOverlayAnimation = function menuOverlayAnimation(menu) {\n  var closedX;\n  var openedX;\n  var width = menu.width + 8;\n  var menuAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n\n  if (menu.isEndSide) {\n    // right side\n    closedX = width + 'px';\n    openedX = '0px';\n  } else {\n    // left side\n    closedX = -width + 'px';\n    openedX = '0px';\n  }\n\n  menuAnimation.addElement(menu.menuInnerEl).fromTo('transform', \"translateX(\".concat(closedX, \")\"), \"translateX(\".concat(openedX, \")\"));\n  var mode = getIonMode(menu);\n  var isIos = mode === 'ios';\n  var opacity = isIos ? 0.2 : 0.25;\n  backdropAnimation.addElement(menu.backdropEl).fromTo('opacity', 0.01, opacity);\n  return baseAnimation(isIos).addAnimation([menuAnimation, backdropAnimation]);\n};\n/**\n * Menu Push Type\n * The content slides over to reveal the menu underneath.\n * The menu itself also slides over to reveal its bad self.\n */\n\n\nvar menuPushAnimation = function menuPushAnimation(menu) {\n  var contentOpenedX;\n  var menuClosedX;\n  var mode = getIonMode(menu);\n  var width = menu.width;\n\n  if (menu.isEndSide) {\n    contentOpenedX = -width + 'px';\n    menuClosedX = width + 'px';\n  } else {\n    contentOpenedX = width + 'px';\n    menuClosedX = -width + 'px';\n  }\n\n  var menuAnimation = createAnimation().addElement(menu.menuInnerEl).fromTo('transform', \"translateX(\".concat(menuClosedX, \")\"), 'translateX(0px)');\n  var contentAnimation = createAnimation().addElement(menu.contentEl).fromTo('transform', 'translateX(0px)', \"translateX(\".concat(contentOpenedX, \")\"));\n  var backdropAnimation = createAnimation().addElement(menu.backdropEl).fromTo('opacity', 0.01, 0.32);\n  return baseAnimation(mode === 'ios').addAnimation([menuAnimation, contentAnimation, backdropAnimation]);\n};\n/**\n * Menu Reveal Type\n * The content slides over to reveal the menu underneath.\n * The menu itself, which is under the content, does not move.\n */\n\n\nvar menuRevealAnimation = function menuRevealAnimation(menu) {\n  var mode = getIonMode(menu);\n  var openedX = menu.width * (menu.isEndSide ? -1 : 1) + 'px';\n  var contentOpen = createAnimation().addElement(menu.contentEl) // REVIEW\n  .fromTo('transform', 'translateX(0px)', \"translateX(\".concat(openedX, \")\"));\n  return baseAnimation(mode === 'ios').addAnimation(contentOpen);\n};\n\nvar createMenuController = function createMenuController() {\n  var menuAnimations = new Map();\n  var menus = [];\n\n  var open = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(menu) {\n      var menuEl;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get(menu);\n\n            case 2:\n              menuEl = _context.sent;\n\n              if (!menuEl) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", menuEl.open());\n\n            case 5:\n              return _context.abrupt(\"return\", false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function open(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var close = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(menu) {\n      var menuEl;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return menu !== undefined ? get(menu) : getOpen();\n\n            case 2:\n              menuEl = _context2.sent;\n\n              if (!(menuEl !== undefined)) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", menuEl.close());\n\n            case 5:\n              return _context2.abrupt(\"return\", false);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function close(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var toggle = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(menu) {\n      var menuEl;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return get(menu);\n\n            case 2:\n              menuEl = _context3.sent;\n\n              if (!menuEl) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", menuEl.toggle());\n\n            case 5:\n              return _context3.abrupt(\"return\", false);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function toggle(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var enable = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(shouldEnable, menu) {\n      var menuEl;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return get(menu);\n\n            case 2:\n              menuEl = _context4.sent;\n\n              if (menuEl) {\n                menuEl.disabled = !shouldEnable;\n              }\n\n              return _context4.abrupt(\"return\", menuEl);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function enable(_x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var swipeGesture = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(shouldEnable, menu) {\n      var menuEl;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return get(menu);\n\n            case 2:\n              menuEl = _context5.sent;\n\n              if (menuEl) {\n                menuEl.swipeGesture = shouldEnable;\n              }\n\n              return _context5.abrupt(\"return\", menuEl);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function swipeGesture(_x6, _x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var isOpen = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(menu) {\n      var menuEl, _menuEl;\n\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(menu != null)) {\n                _context6.next = 7;\n                break;\n              }\n\n              _context6.next = 3;\n              return get(menu);\n\n            case 3:\n              menuEl = _context6.sent;\n              return _context6.abrupt(\"return\", menuEl !== undefined && menuEl.isOpen());\n\n            case 7:\n              _context6.next = 9;\n              return getOpen();\n\n            case 9:\n              _menuEl = _context6.sent;\n              return _context6.abrupt(\"return\", _menuEl !== undefined);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function isOpen(_x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var isEnabled = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(menu) {\n      var menuEl;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return get(menu);\n\n            case 2:\n              menuEl = _context7.sent;\n\n              if (!menuEl) {\n                _context7.next = 5;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", !menuEl.disabled);\n\n            case 5:\n              return _context7.abrupt(\"return\", false);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function isEnabled(_x9) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var get = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(menu) {\n      var menuRef, menuEl;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return waitUntilReady();\n\n            case 2:\n              if (!(menu === 'start' || menu === 'end')) {\n                _context8.next = 9;\n                break;\n              }\n\n              // there could be more than one menu on the same side\n              // so first try to get the enabled one\n              menuRef = find(function (m) {\n                return m.side === menu && !m.disabled;\n              });\n\n              if (!menuRef) {\n                _context8.next = 6;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", menuRef);\n\n            case 6:\n              return _context8.abrupt(\"return\", find(function (m) {\n                return m.side === menu;\n              }));\n\n            case 9:\n              if (!(menu != null)) {\n                _context8.next = 11;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", find(function (m) {\n                return m.menuId === menu;\n              }));\n\n            case 11:\n              // return the first enabled menu\n              menuEl = find(function (m) {\n                return !m.disabled;\n              });\n\n              if (!menuEl) {\n                _context8.next = 14;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", menuEl);\n\n            case 14:\n              return _context8.abrupt(\"return\", menus.length > 0 ? menus[0].el : undefined);\n\n            case 15:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function get(_x10) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  /**\n   * Get the instance of the opened menu. Returns `null` if a menu is not found.\n   */\n\n\n  var getOpen = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return waitUntilReady();\n\n            case 2:\n              return _context9.abrupt(\"return\", _getOpenSync());\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function getOpen() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  /**\n   * Get all menu instances.\n   */\n\n\n  var getMenus = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return waitUntilReady();\n\n            case 2:\n              return _context10.abrupt(\"return\", getMenusSync());\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function getMenus() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  /**\n   * Get whether or not a menu is animating. Returns `true` if any\n   * menu is currently animating.\n   */\n\n\n  var isAnimating = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return waitUntilReady();\n\n            case 2:\n              return _context11.abrupt(\"return\", isAnimatingSync());\n\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function isAnimating() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var registerAnimation = function registerAnimation(name, animation) {\n    menuAnimations.set(name, animation);\n  };\n\n  var _register = function _register(menu) {\n    if (menus.indexOf(menu) < 0) {\n      if (!menu.disabled) {\n        _setActiveMenu(menu);\n      }\n\n      menus.push(menu);\n    }\n  };\n\n  var _unregister = function _unregister(menu) {\n    var index = menus.indexOf(menu);\n\n    if (index > -1) {\n      menus.splice(index, 1);\n    }\n  };\n\n  var _setActiveMenu = function _setActiveMenu(menu) {\n    // if this menu should be enabled\n    // then find all the other menus on this same side\n    // and automatically disable other same side menus\n    var side = menu.side;\n    menus.filter(function (m) {\n      return m.side === side && m !== menu;\n    }).forEach(function (m) {\n      return m.disabled = true;\n    });\n  };\n\n  var _setOpen = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(menu, shouldOpen, animated) {\n      var openedMenu;\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!isAnimatingSync()) {\n                _context12.next = 2;\n                break;\n              }\n\n              return _context12.abrupt(\"return\", false);\n\n            case 2:\n              if (!shouldOpen) {\n                _context12.next = 9;\n                break;\n              }\n\n              _context12.next = 5;\n              return getOpen();\n\n            case 5:\n              openedMenu = _context12.sent;\n\n              if (!(openedMenu && menu.el !== openedMenu)) {\n                _context12.next = 9;\n                break;\n              }\n\n              _context12.next = 9;\n              return openedMenu.setOpen(false, false);\n\n            case 9:\n              return _context12.abrupt(\"return\", menu._setOpen(shouldOpen, animated));\n\n            case 10:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function _setOpen(_x11, _x12, _x13) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var _createAnimation = function _createAnimation(type, menuCmp) {\n    var animationBuilder = menuAnimations.get(type);\n\n    if (!animationBuilder) {\n      throw new Error('animation not registered');\n    }\n\n    var animation = animationBuilder(menuCmp);\n    return animation;\n  };\n\n  var _getOpenSync = function _getOpenSync() {\n    return find(function (m) {\n      return m._isOpen;\n    });\n  };\n\n  var getMenusSync = function getMenusSync() {\n    return menus.map(function (menu) {\n      return menu.el;\n    });\n  };\n\n  var isAnimatingSync = function isAnimatingSync() {\n    return menus.some(function (menu) {\n      return menu.isAnimating;\n    });\n  };\n\n  var find = function find(predicate) {\n    var instance = menus.find(predicate);\n\n    if (instance !== undefined) {\n      return instance.el;\n    }\n\n    return undefined;\n  };\n\n  var waitUntilReady = function waitUntilReady() {\n    return Promise.all(Array.from(document.querySelectorAll('ion-menu')).map(function (menu) {\n      return new Promise(function (resolve) {\n        return componentOnReady(menu, resolve);\n      });\n    }));\n  };\n\n  registerAnimation('reveal', menuRevealAnimation);\n  registerAnimation('push', menuPushAnimation);\n  registerAnimation('overlay', menuOverlayAnimation);\n\n  if (typeof document !== 'undefined') {\n    document.addEventListener('ionBackButton', function (ev) {\n      var openMenu = _getOpenSync();\n\n      if (openMenu) {\n        ev.detail.register(MENU_BACK_BUTTON_PRIORITY, function () {\n          return openMenu.close();\n        });\n      }\n    });\n  }\n\n  return {\n    registerAnimation: registerAnimation,\n    get: get,\n    getMenus: getMenus,\n    getOpen: getOpen,\n    isEnabled: isEnabled,\n    swipeGesture: swipeGesture,\n    isAnimating: isAnimating,\n    isOpen: isOpen,\n    enable: enable,\n    toggle: toggle,\n    close: close,\n    open: open,\n    _getOpenSync: _getOpenSync,\n    _createAnimation: _createAnimation,\n    _register: _register,\n    _unregister: _unregister,\n    _setOpen: _setOpen,\n    _setActiveMenu: _setActiveMenu\n  };\n};\n\nvar menuController = /*@__PURE__*/createMenuController();\nexport { menuController as m };","map":null,"metadata":{},"sourceType":"module"}