{"ast":null,"code":"import _toConsumableArray from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers-4d272360.js';\n\nvar attachComponent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(delegate, container, component, cssClasses, componentProps, inline) {\n    var _a, el;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!delegate) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", delegate.attachViewToDom(container, component, componentProps, cssClasses));\n\n          case 2:\n            if (!(!inline && typeof component !== 'string' && !(component instanceof HTMLElement))) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('framework delegate is missing');\n\n          case 4:\n            el = typeof component === 'string' ? (_a = container.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(component) : component;\n\n            if (cssClasses) {\n              cssClasses.forEach(function (c) {\n                return el.classList.add(c);\n              });\n            }\n\n            if (componentProps) {\n              Object.assign(el, componentProps);\n            }\n\n            container.appendChild(el);\n            _context.next = 10;\n            return new Promise(function (resolve) {\n              return componentOnReady(el, resolve);\n            });\n\n          case 10:\n            return _context.abrupt(\"return\", el);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function attachComponent(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar detachComponent = function detachComponent(delegate, element) {\n  if (element) {\n    if (delegate) {\n      var container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n\n    element.remove();\n  }\n\n  return Promise.resolve();\n};\n\nvar CoreDelegate = function CoreDelegate() {\n  var BaseComponent;\n  var Reference;\n\n  var attachViewToDom = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(parentElement, userComponent) {\n      var userComponentProps,\n          cssClasses,\n          _a,\n          _b,\n          el,\n          _el,\n          app,\n          _args2 = arguments;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              userComponentProps = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n              cssClasses = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : [];\n              BaseComponent = parentElement;\n              /**\n               * If passing in a component via the `component` props\n               * we need to append it inside of our overlay component.\n               */\n\n              if (!userComponent) {\n                _context2.next = 12;\n                break;\n              }\n\n              /**\n               * If passing in the tag name, create\n               * the element otherwise just get a reference\n               * to the component.\n               */\n              el = typeof userComponent === 'string' ? (_a = BaseComponent.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(userComponent) : userComponent;\n              /**\n               * Add any css classes passed in\n               * via the cssClasses prop on the overlay.\n               */\n\n              cssClasses.forEach(function (c) {\n                return el.classList.add(c);\n              });\n              /**\n               * Add any props passed in\n               * via the componentProps prop on the overlay.\n               */\n\n              Object.assign(el, userComponentProps);\n              /**\n               * Finally, append the component\n               * inside of the overlay component.\n               */\n\n              BaseComponent.appendChild(el);\n              _context2.next = 10;\n              return new Promise(function (resolve) {\n                return componentOnReady(el, resolve);\n              });\n\n            case 10:\n              _context2.next = 13;\n              break;\n\n            case 12:\n              if (BaseComponent.children.length > 0) {\n                // If there is no component, then we need to create a new parent\n                // element to apply the css classes to.\n                _el = (_b = BaseComponent.ownerDocument) === null || _b === void 0 ? void 0 : _b.createElement('div');\n                cssClasses.forEach(function (c) {\n                  return _el.classList.add(c);\n                }); // Move each child from the original template to the new parent element.\n\n                _el.append.apply(_el, _toConsumableArray(BaseComponent.children)); // Append the new parent element to the original parent element.\n\n\n                BaseComponent.appendChild(_el);\n              }\n\n            case 13:\n              /**\n               * Get the root of the app and\n               * add the overlay there.\n               */\n              app = document.querySelector('ion-app') || document.body;\n              /**\n               * Create a placeholder comment so that\n               * we can return this component to where\n               * it was previously.\n               */\n\n              Reference = document.createComment('ionic teleport');\n              BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n              app.appendChild(BaseComponent);\n              return _context2.abrupt(\"return\", BaseComponent);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function attachViewToDom(_x7, _x8) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var removeViewFromDom = function removeViewFromDom() {\n    /**\n     * Return component to where it was previously in the DOM.\n     */\n    if (BaseComponent && Reference) {\n      Reference.parentNode.insertBefore(BaseComponent, Reference);\n      Reference.remove();\n    }\n\n    return Promise.resolve();\n  };\n\n  return {\n    attachViewToDom: attachViewToDom,\n    removeViewFromDom: removeViewFromDom\n  };\n};\n\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };","map":null,"metadata":{},"sourceType":"module"}