{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index-33ffec25.js';\n/**\n * Creates a controller that tracks and reacts to opening or closing the keyboard.\n *\n * @internal\n * @param keyboardChangeCallback A function to call when the keyboard opens or closes.\n */\n\nvar createKeyboardController = function createKeyboardController(keyboardChangeCallback) {\n  var keyboardWillShowHandler;\n  var keyboardWillHideHandler;\n  var keyboardVisible;\n\n  var init = function init() {\n    keyboardWillShowHandler = function keyboardWillShowHandler() {\n      keyboardVisible = true;\n      if (keyboardChangeCallback) keyboardChangeCallback(true);\n    };\n\n    keyboardWillHideHandler = function keyboardWillHideHandler() {\n      keyboardVisible = false;\n      if (keyboardChangeCallback) keyboardChangeCallback(false);\n    };\n\n    win === null || win === void 0 ? void 0 : win.addEventListener('keyboardWillShow', keyboardWillShowHandler);\n    win === null || win === void 0 ? void 0 : win.addEventListener('keyboardWillHide', keyboardWillHideHandler);\n  };\n\n  var destroy = function destroy() {\n    win === null || win === void 0 ? void 0 : win.removeEventListener('keyboardWillShow', keyboardWillShowHandler);\n    win === null || win === void 0 ? void 0 : win.removeEventListener('keyboardWillHide', keyboardWillHideHandler);\n    keyboardWillShowHandler = keyboardWillHideHandler = undefined;\n  };\n\n  var isKeyboardVisible = function isKeyboardVisible() {\n    return keyboardVisible;\n  };\n\n  init();\n  return {\n    init: init,\n    destroy: destroy,\n    isKeyboardVisible: isKeyboardVisible\n  };\n};\n\nexport { createKeyboardController as c };","map":null,"metadata":{},"sourceType":"module"}