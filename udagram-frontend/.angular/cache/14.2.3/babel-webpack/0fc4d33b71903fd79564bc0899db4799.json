{"ast":null,"code":"import _regeneratorRuntime from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/famillelasme/Documents/engineer/udagram-microservice/udagram-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { __awaiter } from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from 'src/app/api/api.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/api.service\";\nvar JWT_LOCALSTORE_KEY = 'jwt';\nvar USER_LOCALSTORE_KEY = 'user';\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(api) {\n      _classCallCheck(this, AuthService);\n\n      this.api = api;\n      this.currentUser$ = new BehaviorSubject(null);\n      this.initToken();\n    }\n\n    _createClass(AuthService, [{\n      key: \"initToken\",\n      value: function initToken() {\n        var token = localStorage.getItem(JWT_LOCALSTORE_KEY);\n        var user = JSON.parse(localStorage.getItem(USER_LOCALSTORE_KEY));\n\n        if (token && user) {\n          this.setTokenAndUser(token, user);\n        }\n      }\n    }, {\n      key: \"setTokenAndUser\",\n      value: function setTokenAndUser(token, user) {\n        localStorage.setItem(JWT_LOCALSTORE_KEY, token);\n        localStorage.setItem(USER_LOCALSTORE_KEY, JSON.stringify(user));\n        this.api.setAuthToken(token);\n        this.currentUser$.next(user);\n      }\n    }, {\n      key: \"login\",\n      value: function login(email, password) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          var _this = this;\n\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", this.api.post('/users/auth/login', {\n                    email: email,\n                    password: password\n                  }).then(function (res) {\n                    _this.setTokenAndUser(res.token, res.user);\n\n                    return res;\n                  }).catch(function (e) {\n                    throw e;\n                  }));\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n      }\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        this.setTokenAndUser(null, null);\n        return true;\n      }\n    }, {\n      key: \"register\",\n      value: function register(user, password) {\n        var _this2 = this;\n\n        return this.api.post('/users/auth/', {\n          email: user.email,\n          password: password\n        }).then(function (res) {\n          _this2.setTokenAndUser(res.token, res.user);\n\n          return res;\n        }).catch(function (e) {\n          throw e;\n        });\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.ApiService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}